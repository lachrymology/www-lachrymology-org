---
title: Beings - Knowledge as interacting experts
created: 2013.05.11
last_modified: 2013.05.11
author: Fogus
author_link: http://www.fogus.me
---

Abstract 
========

Knowledge may be organized as a community of interacting modules Each module is granted a complex structure, to simulate a particular expert in some small domain An extended analogy is drawn to a group of cooperating human specialists. Based on this, an internal constraint is imposed on the modules. Then structure must be standard over the entire community. Some advantages of a uniform formalism are thereby preserved. An experimental community was implemented for the task domain of automatic programming. It has managed to synthesize a few inductive inference LISP programs, nonformally, from specific restricted dialogues with a human user.

1. Experts and Beings
=====================

Consider an interdisciplinary enterprise, attempted by a community of human experts who are specialists in - and only in - their own fields. What modes of interactions will be productive? The dominant paradigm might well settle into questioning and answering each other. Instead of a chairman, suppose the group adopts rules for gaining the floor, what a speaker may do, and how to resolve disputes. When a topic is being considered, one or two experts might recognize it and speak up. In the course of their exposition they might need to call on other specialists. This might be by name, by specialty, or simply by posing a new sub-question and hoping someone rould recognize his own relevance and volunteer a suggestion. Such transfers would be more common at the beginning, when the task is (by assumption) too general for any one member to comprehend. As the questions form on more specific issues, single individuals should be able to supply complete solutions. If the task is to construct something, then the activities of the experts should not be strictly verbal. Often, one will recognize his relevance to the current situation and ask to *do* something, clarify or modify or (rarely) create.

What would it mean to simulate the above activity? Imagine several little programs, each one modelling a different expert. What should each program, called a *Being*, be capable of. It must possess a corpus of specific facts and strategies for its designated speciality. It must interact via questioning and answering other Beings. Each Being should be able to recognize when it is relevant. It must set up and alter structures, just as the human specialists do.

Let us return to our meeting of human experts. To be more concrete, suppose their task is to design and code a large computer program: a concept formation system[2]. Experts who will be useful include scientific programmers, non programming psychologists, system hackers, and management personnel. What happens in the ensuing session? When an expert participates, he will either be aiding a colleague in some difficulty or else transferring a tiny, customized bit of his expertise (facts about his field) into a programmed function which can do something.[^1] The final code reflects the member's knowledge, in that sense. One way the session might proceed is for the specialists to actually do the concept formation task. As they become familiar with what part of their own expertise is being called upon, and in what ways, they can begin to isolate it. When it is clear precisely what each is doing, they can take their extracted bits of knowledge, organize them, formalize them, and program them. A conscious effort along these lines was made in [8], where experts gradually replaced themselves by programs. Instead of discussing how to write a speech program, they *did* speech recognition, until each one could introspect sufficiently into his own activities to formalize them.[^2] For our task, one expects the psychologists to dominate the early discussions, later yielding to programmers. The project sponsor might be passive, submitting a single specification order for the program, or active, paiticipating in the work as a (somewhat priveleged) member of the team. This individual is the one who wants the final product, hence will be called the user.

[^1]: So cool!
[^2]: It would be amazing to show this in action.

How could Beings do this? There would be some little program containing information about CONCEPT FORMATION (much more than would be used in writing any single concept formation program), another Being who knows how to manage a group to WRITE PROGRAMS, and many lower level specialists, for example INFO-OBTAINER, TEST, MODIFYDATA STRUCTURE, UNTIL-LOOP, VISUAL-PERCEPTION, AVOID-CONTRADICTION, PROPOSE-PL AUSIHt.E-NAME Like the human specialists, the Beings would contain far too much infoimation, far too inefficiently lepresented. to be able to say "we ourselves constitute the desired piogtam'" They would have to discuss, and perhaps cany out. the concept formation task They would write specialized versions of themselves, programs which could do exactly what the Beings did to carry out the task, no more not less (although they would hopefully take much less time, be more customized). This activity is relected to in the sequel as automatic programming Some Beings (eg, TEST) may have several distinct, stieamlined fractions of themselves in the final program. Beings (eg, PROPOSE-PLAUSIBLE-NAME) which only aided other Beings may not have any con elates in the final synthesized code.